<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jacky Lam on Jacky Lam</title>
    <link>/</link>
    <description>Recent content in Jacky Lam on Jacky Lam</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <copyright>Jacky Lam</copyright>
    <lastBuildDate>Sat, 01 Jun 2030 13:00:00 -0400</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Example Talk</title>
      <link>/talk/example/</link>
      <pubDate>Sat, 01 Jun 2030 13:00:00 -0400</pubDate>
      
      <guid>/talk/example/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    
Click on the **Slides** button above to view the built-in slides feature.

  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Slides can be added in a few ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; slides using Academic&amp;rsquo;s &lt;em&gt;Slides&lt;/em&gt; feature and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upload&lt;/strong&gt; an existing slide deck to &lt;code&gt;static/&lt;/code&gt; and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Embed&lt;/strong&gt; your slides (e.g. Google Slides) or presentation video on this page using &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;shortcodes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Further talk details can easily be added to this page using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Predicting Taxi Fares in NYC</title>
      <link>/blog/taxi-fare/</link>
      <pubDate>Sat, 06 Apr 2019 00:00:00 -0400</pubDate>
      
      <guid>/blog/taxi-fare/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Visualizing Veteran Population</title>
      <link>/blog/veterans/</link>
      <pubDate>Fri, 30 Nov 2018 00:00:00 -0400</pubDate>
      
      <guid>/blog/veterans/</guid>
      <description>

&lt;p&gt;The &lt;a href=&#34;https://www.va.gov/&#34; target=&#34;_blank&#34;&gt;US Department of Veterans Affairs&lt;/a&gt; is a federal agency responsible for taking care of US military personnel after they separated from service. The VA provides healthcare, education, disability, and other benefits to US veterans. The &lt;a href=&#34;https://www.va.gov/vetdata/veteran_population.asp&#34; target=&#34;_blank&#34;&gt;VA&lt;/a&gt; also has a lot of data on US veterans available for free. There&amp;rsquo;s a bunch of spreadsheets and pivot tables on veteran population. The data is given in county format, which is good for our analysis later, but we need to aggregate the data to view it at a state level.&lt;/p&gt;

&lt;h2 id=&#34;b-us-veteran-population-density-in-2015-b&#34;&gt;&lt;b&gt;US Veteran Population Density in 2015&lt;/b&gt;&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;./gallery/uspop.png&#34; alt=&#34;png&#34; /&gt;
Here is a breakdown of veteran population density across the US in 2015. We can see that most veterans live in California, Texas, and Florida.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;b-new-york-veteran-population-density-in-2015-b&#34;&gt;&lt;b&gt;New York Veteran Population Density in 2015&lt;/b&gt;&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;./gallery/nypopraw.png&#34; alt=&#34;png&#34; /&gt;
Now that we have an idea of the veteran population in the US, let&amp;rsquo;s look more closely at a particular state to see if we can draw any insights on this dataset. The above map shows a raw count of veterans in New York. Suffolk County and Erie County have the most veterans. However, this map can be a little misleading. There are a lot of veterans living in these counties but we do not know anything about the overall population density in each county. Let&amp;rsquo;s take some &lt;a href=&#34;https://www.census.gov/programs-surveys/geography.html&#34; target=&#34;_blank&#34;&gt;census data&lt;/a&gt; and build out veteran proportion in each country.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;b-new-york-veteran-population-by-percentage-b&#34;&gt;&lt;b&gt;New York Veteran Population by percentage&lt;/b&gt;&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;./gallery/nypopperc.png&#34; alt=&#34;png&#34; /&gt;
Now we can see that Jefferson and Hamilton County have the most veterans by percentage of population within the county. A little Google search found that there&amp;rsquo;s a VA in both Hamilton County and Jefferson County!
&lt;br&gt;
&lt;a href=&#34;https://veterans.ny.gov/content/hamilton-county-veterans-service-agency-location-1&#34; target=&#34;_blank&#34;&gt;VA in Hamilton County&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://co.jefferson.ny.us/departments/Veterans&#34; target=&#34;_blank&#34;&gt;VA in Jefferson County&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;b-importance-of-visualization-b&#34;&gt;&lt;b&gt;Importance of Visualization&lt;/b&gt;&lt;/h2&gt;

&lt;p&gt;Visualizing this dataset helped us understand that areas with the highest proportion of veterans do not happen by chance. More veterans will live nearby a VA.  I think this approach would be useful for the VA if they have plans to build new VA hospitals or offices that provide benefits to veterans.&lt;/p&gt;

&lt;h2 id=&#34;b-recent-posts-b&#34;&gt;&lt;b&gt;Recent Posts&lt;/b&gt;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jackylam.io/blog/taxi-relief/&#34; target=&#34;_blank&#34;&gt;Creating a Practical Tool for Taxi/Uber Driver&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;b-tutorials-b&#34;&gt;&lt;b&gt;Tutorials:&lt;/b&gt;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jackylam.io/tutorial/uber-data/&#34; target=&#34;_blank&#34;&gt;Explorartory Analysis on Uber Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Creating a Practical Tool for Taxi/Uber Drivers</title>
      <link>/blog/taxi-relief/</link>
      <pubDate>Thu, 04 Oct 2018 00:00:00 -0400</pubDate>
      
      <guid>/blog/taxi-relief/</guid>
      <description>

&lt;p&gt;Taxi drivers are undoubtedly hard-working professionals that work long hours without many breaks in between. To help facilitate breaks in between shifts, the NYC Department of Transportation (DOT) in conjunction with the NYC Taxi &amp;amp; Limousine Commission (TLC) has created exclusive parking spaces for drivers. These spaces allow drivers to temporarily leave their vehicle, stretch their legs, eat, and use the restroom. The problem is that there is a disconnect between the drivers and the DOT. The information was not properly distributed to the drivers in a way drivers could access this information while on the road. Here is the &lt;a href=&#34;https://www1.nyc.gov/html/dot/html/motorist/taxirelief.shtml&#34; target=&#34;_blank&#34;&gt;original listing&lt;/a&gt; of taxi relief stands created by the DOT. This information is useful but extremely difficult for a driver to navigate, especially while driving.&lt;/p&gt;

&lt;h2 id=&#34;a-new-way-to-navigate&#34;&gt;A New Way To Navigate&lt;/h2&gt;

&lt;p&gt;Through many months of online and in-field research, I created a more refined list with relevant information for drivers about each stand. This information includes an estimated amount of parking spaces, hours/limits space is available, public restrooms, restaurants nearby, subway stations, and a lot more.&lt;/p&gt;

&lt;div id=&#34;Container&#34;
 style=&#34;padding-bottom:75%; position:relative; display:block; width: 100%&#34;&gt;
 &lt;iframe id=&#34;ReliefStandMap&#34; 
  width=&#34;100%&#34; height=&#34;100%&#34; 
  src=&#34;https://www.google.com/maps/d/embed?mid=1DBI0nZ8NTAwyLggrq4-hxohNmd0Piucd&#34;
  frameborder=&#34;0&#34; allowfullscreen=&#34;&#34;
  style=&#34;position:absolute; top:0; left: 0&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;several-types-of-stands&#34;&gt;Several Types of Stands&lt;/h2&gt;

&lt;p&gt;There are 4 types of stands spread across NYC, and they allow specific privileges to certain types of vehicles.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;i&gt;Disclaimer: This information is &lt;u&gt;not&lt;/u&gt; considered an official source of information.&lt;/i&gt;&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Taxi Stand:&lt;/b&gt; Taxi drivers can wait in their vehicle and pick up passengers.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Taxi Relief Stand:&lt;/b&gt; Taxi drivers are allowed to park their vehicles for up to one hour.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Taxi/FHV Relief Stand:&lt;/b&gt; Taxi and FHV drivers are allowed to park their vehicles for up to one hour.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;FHV Only:&lt;/b&gt; FHV drivers are allowed to park their vehicles for up to one hour.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;
The map has been featured on &lt;a href=&#34;https://www.uber.com/drive/new-york/where-to-drive/&#34; target=&#34;_blank&#34;&gt;Uber&amp;rsquo;s webpage.&lt;/a&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;b-recent-posts-b&#34;&gt;&lt;b&gt;Recent Posts&lt;/b&gt;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jackylam.io/blog/veterans/&#34; target=&#34;_blank&#34;&gt;Visualizing Veteran Population&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;b-tutorials-b&#34;&gt;&lt;b&gt;Tutorials:&lt;/b&gt;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jackylam.io/tutorial/uber-data/&#34; target=&#34;_blank&#34;&gt;Explorartory Analysis on Uber Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Explorartory Analysis on Uber Data</title>
      <link>/tutorial/uber-data/</link>
      <pubDate>Mon, 10 Sep 2018 00:00:00 -0400</pubDate>
      
      <guid>/tutorial/uber-data/</guid>
      <description>

&lt;p&gt;In this tutorial we&amp;rsquo;re going to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#import-data&#34;&gt;Import Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#clean-datetime&#34;&gt;Clean Datetime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#aggregate-data&#34;&gt;Aggregate Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#graph&#34;&gt;Graph&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;import-data&#34;&gt;Import Data&lt;/h2&gt;

&lt;p&gt;The dataset we will be working on today will be uber&amp;rsquo;s NYC September 2014 dataset. You can find the dataset and a bunch more on Kaggle or click &lt;a href=&#34;https://www.kaggle.com/fivethirtyeight/uber-pickups-in-new-york-city/data&#34; target=&#34;_blank&#34;&gt;here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you have your data, import it, look at the data structure. We&amp;rsquo;re also going to use the &lt;code&gt;tidyverse&lt;/code&gt; package for this tutorial.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str(uber)
 $ Date.Time: Factor w/ 42907 levels &amp;quot;9/1/2014 0:00:00&amp;quot;,..: 2 2 4 7 12 13 16 17 33 34 ...
 $ Lat      : num  40.2 40.8 40.8 40.7 40.8 ...
 $ Lon      : num  -74 -74 -74 -74 -73.9 ...
 $ Base     : Factor w/ 5 levels &amp;quot;B02512&amp;quot;,&amp;quot;B02598&amp;quot;,..: 1 1 1 1 1 1 1 1 1 1 ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice that the datetime is a factor and it does not follow the &lt;a href=&#34;https://en.wikipedia.org/wiki/ISO_8601&#34; target=&#34;_blank&#34;&gt;ISO 8601&lt;/a&gt; standard. R likes reading datetimes in this format. The data structure in R is called POSIXct or POSIXlt. We don&amp;rsquo;t need to get into the details of it but just know that when you run an &lt;code&gt;str()&lt;/code&gt; POSIXct or POSIXlt is preferable. You will run into a bunch of problems if it is otherwise.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Date.Time&lt;/th&gt;
&lt;th&gt;Lat&lt;/th&gt;
&lt;th&gt;Lon&lt;/th&gt;
&lt;th&gt;Base&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;9/1/2014 0:01:00&lt;/td&gt;
&lt;td&gt;40.2201&lt;/td&gt;
&lt;td&gt;-74.0021&lt;/td&gt;
&lt;td&gt;B02512&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;9/1/2014 0:01:00&lt;/td&gt;
&lt;td&gt;40.7500&lt;/td&gt;
&lt;td&gt;-74.0027&lt;/td&gt;
&lt;td&gt;B02512&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;9/1/2014 0:03:00&lt;/td&gt;
&lt;td&gt;40.7559&lt;/td&gt;
&lt;td&gt;-73.9864&lt;/td&gt;
&lt;td&gt;B02512&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;9/1/2014 0:06:00&lt;/td&gt;
&lt;td&gt;40.7450&lt;/td&gt;
&lt;td&gt;-73.9889&lt;/td&gt;
&lt;td&gt;B02512&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;9/1/2014 0:11:00&lt;/td&gt;
&lt;td&gt;40.8145&lt;/td&gt;
&lt;td&gt;-73.9444&lt;/td&gt;
&lt;td&gt;B02512&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;9/1/2014 0:12:00&lt;/td&gt;
&lt;td&gt;40.6735&lt;/td&gt;
&lt;td&gt;-73.9918&lt;/td&gt;
&lt;td&gt;B02512&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;clean-datetime&#34;&gt;Clean Datetime&lt;/h2&gt;

&lt;p&gt;There&amp;rsquo;s a bunch of different ways to clean up datatimes but the method is more or less the same:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Convert factor to character&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;uber$Date.Time = as.character(uber$Date.Time)
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Use a datetime function to convert from chr to POSIXct/POSIXlt&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;uber$Date.Time = strptime(uber$Date.Time, &amp;quot;%m/%d/%Y %H:%M:%S&amp;quot;) #base r
parse_date_time(uber$Date.Time, order = &#39;mdy HMS&#39;) #readr package
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;strptime()&lt;/code&gt; is very fast but is not flexible with weird date formats. It will work fine for this dataset. Below is a chart of datetime formats you will encounter and how you should specify your datetime when you convert it in &lt;code&gt;strptime()&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;datetime-formats&#34;&gt;Datetime formats&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;R Format&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;R Format&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;%a&lt;/td&gt;
&lt;td&gt;Abbreviated weekday&lt;/td&gt;
&lt;td&gt;%A&lt;/td&gt;
&lt;td&gt;Full weekday&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;%b&lt;/td&gt;
&lt;td&gt;Abbreviated month&lt;/td&gt;
&lt;td&gt;%B&lt;/td&gt;
&lt;td&gt;Full month&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;%c&lt;/td&gt;
&lt;td&gt;Locale-specific date and time&lt;/td&gt;
&lt;td&gt;%d&lt;/td&gt;
&lt;td&gt;Decimal date&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;%H&lt;/td&gt;
&lt;td&gt;Decimal hours (24 hour)&lt;/td&gt;
&lt;td&gt;%I&lt;/td&gt;
&lt;td&gt;Decimal hours (12 hour)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;%j&lt;/td&gt;
&lt;td&gt;Decimal day of the year&lt;/td&gt;
&lt;td&gt;%m&lt;/td&gt;
&lt;td&gt;Decimal month&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;%M&lt;/td&gt;
&lt;td&gt;Decimal minute&lt;/td&gt;
&lt;td&gt;%p&lt;/td&gt;
&lt;td&gt;Locale-specific AM/PM&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;%S&lt;/td&gt;
&lt;td&gt;Decimal second&lt;/td&gt;
&lt;td&gt;%U&lt;/td&gt;
&lt;td&gt;Decimal week of the year (starting on Sunday)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;%w&lt;/td&gt;
&lt;td&gt;Decimal Weekday (0=Sunday)&lt;/td&gt;
&lt;td&gt;%W&lt;/td&gt;
&lt;td&gt;Decimal week of the year (starting on Monday)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;%x&lt;/td&gt;
&lt;td&gt;Locale-specific Date&lt;/td&gt;
&lt;td&gt;%X&lt;/td&gt;
&lt;td&gt;Locale-specific Time&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;%y&lt;/td&gt;
&lt;td&gt;2-digit year&lt;/td&gt;
&lt;td&gt;%Y&lt;/td&gt;
&lt;td&gt;4-digit year&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;%z&lt;/td&gt;
&lt;td&gt;Offset from GMT&lt;/td&gt;
&lt;td&gt;%Z&lt;/td&gt;
&lt;td&gt;Time zone (character)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code&gt;parse_date_time&lt;/code&gt; is a more forgiving datetime function. It accepts a wider range of datetime formats and you will not need to use the chart above to specify your datetimes. However, this makes the function a lot slower to work with. If your datetime follows some kind of uniform pattern, &lt;code&gt;strptime()&lt;/code&gt; will work just fine.&lt;/p&gt;

&lt;h2 id=&#34;aggregate-data&#34;&gt;Aggregate Data&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s look at trip volume per day by base.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Extract date from datetime:

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;uber$date = substr(uber$Date.Time, 1,10)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;date is now a &lt;code&gt;chr&lt;/code&gt;, convert it to &lt;code&gt;POSIXlt&lt;/code&gt;:

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;uber$date = strptime(uber$date, &amp;quot;%Y-%m-%d&amp;quot;)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Aggregate the data:

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;table(uber$date,uber$Base)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Date&lt;/th&gt;
&lt;th&gt;B02512&lt;/th&gt;
&lt;th&gt;B02598&lt;/th&gt;
&lt;th&gt;B02617&lt;/th&gt;
&lt;th&gt;B02682&lt;/th&gt;
&lt;th&gt;B02764&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2014-09-01&lt;/td&gt;
&lt;td&gt;638&lt;/td&gt;
&lt;td&gt;4626&lt;/td&gt;
&lt;td&gt;7940&lt;/td&gt;
&lt;td&gt;3677&lt;/td&gt;
&lt;td&gt;3080&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2014-09-02&lt;/td&gt;
&lt;td&gt;1188&lt;/td&gt;
&lt;td&gt;6970&lt;/td&gt;
&lt;td&gt;11642&lt;/td&gt;
&lt;td&gt;5729&lt;/td&gt;
&lt;td&gt;3302&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2014-09-03&lt;/td&gt;
&lt;td&gt;1284&lt;/td&gt;
&lt;td&gt;8079&lt;/td&gt;
&lt;td&gt;13019&lt;/td&gt;
&lt;td&gt;6462&lt;/td&gt;
&lt;td&gt;3787&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2014-09-04&lt;/td&gt;
&lt;td&gt;1513&lt;/td&gt;
&lt;td&gt;9412&lt;/td&gt;
&lt;td&gt;15185&lt;/td&gt;
&lt;td&gt;7670&lt;/td&gt;
&lt;td&gt;4580&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2014-09-05&lt;/td&gt;
&lt;td&gt;1808&lt;/td&gt;
&lt;td&gt;10036&lt;/td&gt;
&lt;td&gt;16472&lt;/td&gt;
&lt;td&gt;8660&lt;/td&gt;
&lt;td&gt;5343&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2014-09-06&lt;/td&gt;
&lt;td&gt;1580&lt;/td&gt;
&lt;td&gt;9848&lt;/td&gt;
&lt;td&gt;15573&lt;/td&gt;
&lt;td&gt;8132&lt;/td&gt;
&lt;td&gt;5387&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2014-09-07&lt;/td&gt;
&lt;td&gt;1124&lt;/td&gt;
&lt;td&gt;7122&lt;/td&gt;
&lt;td&gt;11639&lt;/td&gt;
&lt;td&gt;5983&lt;/td&gt;
&lt;td&gt;4266&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;We might want this to be in a data frame, so we can play around with it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;trips = data.frame(table(uber$date,uber$Base))&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;Notice that our data is saved in a long format. It&amp;rsquo;s not as nicely formatted as the chart above. We&amp;rsquo;ll revisit this later when we graph our data.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;trips = spread(trips,Var2,Freq)&lt;/code&gt; This reformats our data nicely.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now our data frame should look something like the chart above but the date is named Var1. &lt;br&gt;
&lt;code&gt;colnames(trips[1]) &amp;lt;- &amp;quot;date&amp;quot;&lt;/code&gt; That should fix it!&lt;/p&gt;

&lt;h2 id=&#34;graph&#34;&gt;Graph&lt;/h2&gt;

&lt;p&gt;Now it&amp;rsquo;s time to graph. You want your data in a long format like what &lt;code&gt;trips = data.frame(table(uber$date,uber$Base))&lt;/code&gt; gave you. You can just re-run this code or you can use &lt;code&gt;gather()&lt;/code&gt; function to bring our data frame back to it&amp;rsquo;s original state. &lt;br&gt;
&lt;code&gt;graph = gather(trips,&#39;B02512&#39;,&#39;B02598&#39;, &#39;B02682&#39;, &#39;B02764&#39;, &#39;B02617&#39;, key = &amp;quot;Base&amp;quot;, value = &amp;quot;Trips&amp;quot;)&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;date&lt;/th&gt;
&lt;th&gt;Base&lt;/th&gt;
&lt;th&gt;Trips&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2014-09-01&lt;/td&gt;
&lt;td&gt;B02512&lt;/td&gt;
&lt;td&gt;638&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2014-09-02&lt;/td&gt;
&lt;td&gt;B02512&lt;/td&gt;
&lt;td&gt;1188&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2014-09-03&lt;/td&gt;
&lt;td&gt;B02512&lt;/td&gt;
&lt;td&gt;1284&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2014-09-04&lt;/td&gt;
&lt;td&gt;B02512&lt;/td&gt;
&lt;td&gt;1513&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2014-09-05&lt;/td&gt;
&lt;td&gt;B02512&lt;/td&gt;
&lt;td&gt;1808&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2014-09-06&lt;/td&gt;
&lt;td&gt;B02512&lt;/td&gt;
&lt;td&gt;1580&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;It looks like our dates are back into factors. No worries, since we&amp;rsquo;re already in the ISO 8601 format, converting is a breeze. &lt;br&gt;
&lt;code&gt;graph$date = as.POSIXct(as.character(graph$date))&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;After all our hard work, we can finally graph our data!
&lt;code&gt;ggplot(graph, aes(x = Date, y = Trips, color = as.factor(Base))) + geom_line()&lt;/code&gt;
&lt;img src=&#34;/tutorial/uber-graph.png&#34; alt=&#34;png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;b-blog-posts-b&#34;&gt;&lt;b&gt;Blog Posts&lt;/b&gt;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jackylam.io/blog/taxi-relief/&#34; target=&#34;_blank&#34;&gt;Creating a Practical Tool for Taxi/Uber Driver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jackylam.io/blog/veterans/&#34; target=&#34;_blank&#34;&gt;Visualizing Veteran Population&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Privacy Policy</title>
      <link>/privacy/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 -0400</pubDate>
      
      <guid>/privacy/</guid>
      <description>&lt;p&gt;&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>External Project</title>
      <link>/project/external-project/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 -0400</pubDate>
      
      <guid>/project/external-project/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Internal Project</title>
      <link>/project/internal-project/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 -0400</pubDate>
      
      <guid>/project/internal-project/</guid>
      <description>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;

&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;

&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;

&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;

&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Person Re-Identification System For Mobile Devices</title>
      <link>/publication/person-re-id/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 -0400</pubDate>
      
      <guid>/publication/person-re-id/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mobile visual clothing search</title>
      <link>/publication/clothing-search/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 -0400</pubDate>
      
      <guid>/publication/clothing-search/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>/slides/example-slides/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/slides/example-slides/</guid>
      <description>

&lt;h1 id=&#34;welcome-to-slides&#34;&gt;Welcome to Slides&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/&#34; target=&#34;_blank&#34;&gt;Academic&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34; target=&#34;_blank&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;

&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Code block:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
    print(&amp;quot;Eating...&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;

&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;

&lt;p&gt;Block math:&lt;/p&gt;

&lt;p&gt;$$
f\left( x \right) = \;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;

&lt;p&gt;Make content appear incrementally&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;

&lt;p&gt;&lt;span class=&#34;fragment &#34; &gt;
   One
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
   &lt;strong&gt;Two&lt;/strong&gt;
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
   Three
&lt;/span&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;

&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;

&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;


&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/img/boards.jpg&#34;
  &gt;


&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;

&lt;p&gt;Customize the slide style and background&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; slide background-image=&amp;quot;/img/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;

&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.reveal section h1,
.reveal section h2,
.reveal section h3 {
  color: navy;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://discourse.gohugo.io&#34; target=&#34;_blank&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>test</title>
      <link>/publication/test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/publication/test/</guid>
      <description>


&lt;form action=&#34;action_page.php&#34;&gt;
&lt;div class=&#34;imgcontainer&#34;&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;img src=&amp;quot;img_avatar2.png&amp;quot; alt=&amp;quot;Avatar&amp;quot; class=&amp;quot;avatar&amp;quot;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;label for=&amp;quot;uname&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Username&amp;lt;/b&amp;gt;&amp;lt;/label&amp;gt;
&amp;lt;input type=&amp;quot;text&amp;quot; placeholder=&amp;quot;Enter Username&amp;quot; name=&amp;quot;uname&amp;quot; required&amp;gt;

&amp;lt;label for=&amp;quot;psw&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Password&amp;lt;/b&amp;gt;&amp;lt;/label&amp;gt;
&amp;lt;input type=&amp;quot;password&amp;quot; placeholder=&amp;quot;Enter Password&amp;quot; name=&amp;quot;psw&amp;quot; required&amp;gt;

&amp;lt;button type=&amp;quot;submit&amp;quot;&amp;gt;Login&amp;lt;/button&amp;gt;
&amp;lt;label&amp;gt;
  &amp;lt;input type=&amp;quot;checkbox&amp;quot; checked=&amp;quot;checked&amp;quot; name=&amp;quot;remember&amp;quot;&amp;gt; Remember me
&amp;lt;/label&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;container&#34; style=&#34;background-color:#f1f1f1&#34;&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;button type=&amp;quot;button&amp;quot; class=&amp;quot;cancelbtn&amp;quot;&amp;gt;Cancel&amp;lt;/button&amp;gt;
&amp;lt;span class=&amp;quot;psw&amp;quot;&amp;gt;Forgot &amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;password?&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/form&gt;
&lt;div id=&#34;r-markdown&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;R Markdown&lt;/h2&gt;
&lt;p&gt;This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see &lt;a href=&#34;http://rmarkdown.rstudio.com&#34; class=&#34;uri&#34;&gt;http://rmarkdown.rstudio.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When you click the &lt;strong&gt;Knit&lt;/strong&gt; button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(cars)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      speed           dist       
##  Min.   : 4.0   Min.   :  2.00  
##  1st Qu.:12.0   1st Qu.: 26.00  
##  Median :15.0   Median : 36.00  
##  Mean   :15.4   Mean   : 42.98  
##  3rd Qu.:19.0   3rd Qu.: 56.00  
##  Max.   :25.0   Max.   :120.00&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;including-plots&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Including Plots&lt;/h2&gt;
&lt;p&gt;You can also embed plots, for example:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/publication/test_files/figure-html/pressure-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Note that the &lt;code&gt;echo = FALSE&lt;/code&gt; parameter was added to the code chunk to prevent printing of the R code that generated the plot.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
